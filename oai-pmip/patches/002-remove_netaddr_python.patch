diff -ruN umip_orig/extras/UMIP0.4_LMA_UBUNTU.10.04.py umip/extras/UMIP0.4_LMA_UBUNTU.10.04.py
--- umip_orig/extras/UMIP0.4_LMA_UBUNTU.10.04.py	2014-02-10 16:59:21.720245675 +0000
+++ umip/extras/UMIP0.4_LMA_UBUNTU.10.04.py	2014-02-10 17:41:14.112244398 +0000
@@ -40,11 +40,11 @@
 
 print "Config file is : " + g_file_config
 
-g_RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks = IPAddress('0::0')
+g_RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks = ""
 g_RFC5213FixedMAGLinkLayerAddressOnAllAccessLinks = " "
-g_LmaAddress                                      = IPAddress('0::0')
+g_LmaAddress                                      = ""
 g_LmaPmipNetworkDevice                            = ""
-g_LmaCoreNetworkAddress                           = IPAddress('0::0')
+g_LmaCoreNetworkAddress                           = ""
 g_LmaCoreNetworkDevice                            = ""
 g_MagAddressIngress                               = []
 g_MagAddressEgress                                = []
@@ -65,33 +65,33 @@
         continue
     if 'RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks' in line:
         print line
-        g_RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks = IPAddress(element)
+        g_RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks = element
 
     elif 'RFC5213FixedMAGLinkLayerAddressOnAllAccessLinks' in line:
         print line
         g_RFC5213FixedMAGLinkLayerAddressOnAllAccessLinks = element
     elif 'LmaPmipNetworkAddress' in line:
         print line
-        g_LmaAddress = IPAddress(element)
+        g_LmaAddress = element
     elif 'LmaPmipNetworkDevice' in line:
         print line
         g_LmaPmipNetworkDevice = element
     elif 'LmaCoreNetworkAddress' in line:
         print line
-        g_LmaCoreNetworkAddress = IPAddress(element)
+        g_LmaCoreNetworkAddress = element
     elif 'LmaCoreNetworkDevice' in line:
         print line
         g_LmaCoreNetworkDevice = element
     elif 'MagAddressIngress' in line:
         print line
-        g_MagAddressIngress.append(IPAddress(element))
+        g_MagAddressIngress.append(element)
     elif 'MagAddressEgress' in line:
         print line
-        g_MagAddressEgress.append(IPAddress(element))
+        g_MagAddressEgress.append(element)
 
 for ip in g_MagAddressIngress:
-    if ip.format() != IPAddress('0::0').format():
-        command = "ip -6 route del " + ip.format() + "/64"
+    if ip != '0:0:0:0:0:0:0:0':
+        command = "ip -6 route del " + ip + "/64"
         print command
         os.system(command)
         g_num_mags = g_num_mags + 1
@@ -101,7 +101,7 @@
     command = "ip -6 tunnel del ip6tnl" + str(i) + " >/dev/null 2>&1"
     os.system(command)
 
-command = "ip -6 addr del " + g_LmaAddress.format() + "/64 dev " + g_LmaPmipNetworkDevice
+command = "ip -6 addr del " + g_LmaAddress + "/64 dev " + g_LmaPmipNetworkDevice
 print command
 os.system(command)
 
@@ -129,18 +129,18 @@
 
 
 
-command = "ip -6 addr add " + g_LmaAddress.format() + "/64 dev " + g_LmaPmipNetworkDevice
+command = "ip -6 addr add " + g_LmaAddress + "/64 dev " + g_LmaPmipNetworkDevice
 print command
 os.system(command)
-command = "ip -6 addr add " + g_LmaCoreNetworkAddress.format()+"/64 dev "+ g_LmaCoreNetworkDevice
+command = "ip -6 addr add " + g_LmaCoreNetworkAddress+"/64 dev "+ g_LmaCoreNetworkDevice
 print command
 os.system(command)
 
 index = 0
 for ip_ingress in g_MagAddressIngress:
     ip_egress = g_MagAddressEgress[index]
-    if ip_ingress.format() != IPAddress('0::0').format() and ip_egress.format() != IPAddress('0::0').format():
-        command = "ip -6 route add " + ip_ingress.format() + "/64 via " + ip_egress.format() + " dev " + g_LmaPmipNetworkDevice
+    if ip_ingress != '0:0:0:0:0:0:0:0' and ip_egress != '0:0:0:0:0:0:0:0':
+        command = "ip -6 route add " + ip_ingress + "/64 via " + ip_egress + " dev " + g_LmaPmipNetworkDevice
         print command
         os.system(command)
     index += 1
@@ -168,7 +168,7 @@
 
 
 # LD_LIBRARY_PATH for freeradius libs
-command = 'export LD_LIBRARY_PATH=/usr/local/lib;/usr/local/sbin/mip6d -c ' + g_file_config
+command = 'export LD_LIBRARY_PATH=/usr/local/lib; mip6d -c ' + g_file_config
 print command
 subprocess.call(command, shell=True)
 
diff -ruN umip_orig/extras/UMIP0.4_MAG_UBUNTU.10.04.py umip/extras/UMIP0.4_MAG_UBUNTU.10.04.py
--- umip_orig/extras/UMIP0.4_MAG_UBUNTU.10.04.py	2014-02-10 16:59:21.720245675 +0000
+++ umip/extras/UMIP0.4_MAG_UBUNTU.10.04.py	2014-02-10 17:40:57.856244416 +0000
@@ -7,7 +7,7 @@
 import getopt
 
 from subprocess  import *
-from netaddr import *
+
 
 g_path = os.getcwd()
 g_path = os.path.dirname(sys.argv[0]) + "/.."
@@ -41,11 +41,11 @@
 print "Config file is : " + g_file_config
 
 
-g_RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks = IPAddress('0::0')
+g_RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks = ""
 g_RFC5213FixedMAGLinkLayerAddressOnAllAccessLinks = " "
-g_LmaAddress                                      = IPAddress('0::0')
-g_MagAddressIngress                               = IPAddress('0::0')
-g_MagAddressEgress                                = IPAddress('0::0')
+g_LmaAddress                                      = ""
+g_MagAddressIngress                               = ""
+g_MagAddressEgress                                = ""
 g_MagDeviceIngress                                = " "
 g_MagDeviceEgress                                 = " "
 
@@ -63,20 +63,20 @@
     element = element.strip('"')
     if 'RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks' in line:
         print line
-        g_RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks = IPAddress(element)
+        g_RFC5213FixedMAGLinkLocalAddressOnAllAccessLinks = element
 
     elif 'RFC5213FixedMAGLinkLayerAddressOnAllAccessLinks' in line:
         print line
         g_RFC5213FixedMAGLinkLayerAddressOnAllAccessLinks = element
     elif 'LmaPmipNetworkAddress' in line:
         print line
-        g_LmaAddress = IPAddress(element)
+        g_LmaAddress = element
     elif 'MagAddressIngress' in line:
         print line
-        g_MagAddressIngress = IPAddress(element)
+        g_MagAddressIngress = element
     elif 'MagAddressEgress' in line:
         print line
-        g_MagAddressEgress = IPAddress(element)
+        g_MagAddressEgress = element
     elif 'MagDeviceIngress' in line:
         print line
         g_MagDeviceIngress = element
@@ -96,11 +96,11 @@
 print command
 os.system(command)
 
-command = "ip -6 addr del " + g_MagAddressEgress.format() + "/64 dev " + g_MagDeviceEgress + " > /dev/null 2>&1"
+command = "ip -6 addr del " + g_MagAddressEgress + "/64 dev " + g_MagDeviceEgress + " > /dev/null 2>&1"
 print command
 os.system(command)
 
-command = "ip -6 addr del " + g_MagAddressIngress.format() + "/64 dev " + g_MagDeviceIngress + " > /dev/null 2>&1"
+command = "ip -6 addr del " + g_MagAddressIngress + "/64 dev " + g_MagDeviceIngress + " > /dev/null 2>&1"
 print command
 os.system(command)
 
@@ -116,11 +116,11 @@
 print command
 os.system(command)
 
-command = "ip -6 addr add " + g_MagAddressEgress.format() + "/64 dev " + g_MagDeviceEgress
+command = "ip -6 addr add " + g_MagAddressEgress + "/64 dev " + g_MagDeviceEgress
 print command
 os.system(command)
 
-command = "ip -6 addr add " + g_MagAddressIngress.format() + "/64 dev " + g_MagDeviceIngress
+command = "ip -6 addr add " + g_MagAddressIngress + "/64 dev " + g_MagDeviceIngress
 print command
 os.system(command)
 
@@ -137,7 +137,7 @@
 print command
 os.system(command)
 
-command = "ip -6 route add to default via " + g_LmaAddress.format() + " dev " + g_MagDeviceEgress
+command = "ip -6 route add to default via " + g_LmaAddress + " dev " + g_MagDeviceEgress
 print command
 os.system(command)
 
@@ -162,6 +162,6 @@
 	print value
 
 # LD_LIBRARY_PATH for freeradius libs
-command = 'export LD_LIBRARY_PATH=/usr/local/lib;/usr/local/sbin/mip6d -c ' + g_file_config
+command = 'export LD_LIBRARY_PATH=/usr/local/lib; mip6d -c ' + g_file_config
 subprocess.call(command, shell=True)
 
